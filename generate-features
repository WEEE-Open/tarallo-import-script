#!/usr/bin/php
<?php
chdir(__DIR__);
$data = file_get_contents('tarallo-backend' . DIRECTORY_SEPARATOR . 'database-data.sql');
$lines = preg_split('/[\n\r]/', $data, -1, PREG_SPLIT_NO_EMPTY);
$resultjs = '// BEGIN GENERATED CODE' . PHP_EOL;
$resultphp = "\t// BEGIN GENERATED CODE" . PHP_EOL . "\tconst features = [" . PHP_EOL;
$resultlocalized = "\t// BEGIN GENERATED CODE" . PHP_EOL . "\tconst features = [" . PHP_EOL;
$resultlocalized2 = '';

$block = 0;
$features = [];
echo 'Found ' . count($lines) . ' lines' . PHP_EOL;
foreach($lines as $line) {
	/** @noinspection SqlNoDataSourceInspection */
	$wut = 'INSERT INTO `Feature`';
	if(substr($line, 0, strlen($wut)) === $wut) {
		$block = 1;
		continue;
	}
	/** @noinspection SqlNoDataSourceInspection */
	$wut = 'INSERT INTO `FeatureEnum`';
	if(substr($line, 0, strlen($wut)) === $wut) {
		$block = 2;
		continue;
	}
	if($block === 0) {
		continue;
	} else {
		$boom = explode(',', $line);
		if(count($boom) < 2) {
			continue;
		}
		if(substr(trim($boom[0]), 0, 2) == '--') {
			continue;
		}
		if($block === 1) {
			$feature = $id = substr($boom[0], 3, strlen($boom[0]) - 4);
			$type = substr($boom[1], 1, 1);

			$features[$id] = [];

			if($type === '2') {
				$resultjs .= 'Features.list.set(\'' . $feature . '\', new Set({REPLACE' . $id . '}));' . PHP_EOL;
			} else {
				$resultjs .= 'Features.list.set(\'' . $feature . '\', null);' . PHP_EOL;
			}

			switch($type) {
				case '0':
					$resultphp .= "\t\t'$feature' => self::STRING," . PHP_EOL;
					break;
				case '1':
					$resultphp .= "\t\t'$feature' => self::INTEGER," . PHP_EOL;
					break;
				case '2':
					$resultphp .= "\t\t'$feature' => [{REPLACE$id}]," . PHP_EOL;
					break;
				case '3':
					$resultphp .= "\t\t'$feature' => self::DOUBLE," . PHP_EOL;
					break;
			}

			// Last piece has less fragments since it ends with ; instead of ,
			$thePiece = isset($boom[2]) ? $boom[2]: $boom[1];
			$translationPieces = explode('--', $thePiece);
			if(count($translationPieces) >= 2) {
				$translation = trim($translationPieces[1]);
			} else {
				echo "Missing translation for $feature\n";
				exit(1);
			}

			$resultlocalized .= "\t\t'$feature' => '$translation'," . PHP_EOL;

			echo "Feature: $feature:$type:$translation" . PHP_EOL;
		} else if($block === 2) {
			$id = substr($boom[0], 3, strlen($boom[0]) - 4);

			if(count($boom) === 2) {
				// Last piece
				$value = explode(';', $boom[1])[0];
				$value = substr($value, 2, strlen($value) - 4);
			} else {
				$value = substr($boom[1], 2, strlen($boom[1]) - 4);
			}

			$features[$id][] = $value;

			$thePiece = isset($boom[2]) ? $boom[2] : $boom[1];
			$translationPieces = explode('--', $thePiece);
			if(count($translationPieces) >= 2) {
				$translation = trim($translationPieces[1]);
			} else {
				echo "Missing translation for $id=$value\n";
				exit(1);
			}

			$resultlocalized2 .= "\t\t'$id/$value' => '$translation'," . PHP_EOL;

			echo "Value: $id:$value:$translation" . PHP_EOL;
		} else {
			echo 'Lolwut?' . PHP_EOL;
		}
	}
}

foreach($features as $id => $values) {
	$arrayjs = '[';
	$arrayphp = '';
	foreach($values as $value) {
		$arrayjs .= '\'' . $value . '\', ';
		$arrayphp .= "'$value' => true, ";
	}
	$arrayjs = substr($arrayjs, 0, strlen($arrayjs) - 2);
	$arrayphp = substr($arrayphp, 0, strlen($arrayphp) - 2); // trailing commas are valid in PHP, but this looks nices
	$arrayjs .= ']';
	$resultjs = str_replace('{REPLACE' . $id . '}', $arrayjs, $resultjs);
	$resultphp = str_replace('{REPLACE' . $id . '}', $arrayphp, $resultphp);
}
$resultjs .= '// END GENERATED CODE';
$resultphp .= "\t];" . PHP_EOL . "\t// END GENERATED CODE";


$resultlocalized .= "\t];" . PHP_EOL;
$resultlocalized2 .= "\t];" . PHP_EOL . "\t// END GENERATED CODE";
$resultlocalized = implode("\tconst featuresEnum = [\n", [$resultlocalized, $resultlocalized2]);
unset($resultlocalized2);

// Safer alternative:
//file_put_contents('features.generated.js', $resultjs);
//echo 'Done. Run "cat features.generated.js >> tarallo-frontend/js/features.js" and manually merge the file'.PHP_EOL;

$js = file_get_contents('tarallo-frontend' . DIRECTORY_SEPARATOR . 'js' . DIRECTORY_SEPARATOR . 'features.js');

$piecesjs = explode('// BEGIN GENERATED CODE' . PHP_EOL, $js, 2);
if(count($piecesjs) < 2) {
	echo 'Cannot find // BEGIN GENERATED CODE (followed by a newline in current platform format, which may be the problem) in tarallo-frontend/js/features.js' . PHP_EOL;
	exit(1);
}

$piecesjs2 = explode('// END GENERATED CODE', $js, 2);
if(count($piecesjs2) < 2) {
	echo 'Cannot find // END GENERATED CODE in tarallo-frontend/js/features.js' . PHP_EOL;
	exit(1);
}

$php = file_get_contents('tarallo-backend' . DIRECTORY_SEPARATOR . 'src' . DIRECTORY_SEPARATOR . 'Feature.php');

$piecesphp = explode("\t// BEGIN GENERATED CODE" . PHP_EOL, $php, 2);
if(count($piecesphp) < 2) {
	echo 'Cannot find // BEGIN GENERATED CODE (indented and followed by a newline in current platform format, which may be the problem) in tarallo-backend/src/Feature.php' . PHP_EOL;
	exit(1);
}

$piecesphp2 = explode("\t// END GENERATED CODE", $php, 2);
if(count($piecesphp2) < 2) {
	echo 'Cannot find indented // END GENERATED CODE in tarallo-backend/src/Feature.php' . PHP_EOL;
	exit(1);
}

$localized = file_get_contents('tarallo-backend' . DIRECTORY_SEPARATOR . 'SSRv1' . DIRECTORY_SEPARATOR . 'Localizer.php');

$pieceslocalized = explode("\t// BEGIN GENERATED CODE" . PHP_EOL, $localized, 2);
if(count($pieceslocalized) < 2) {
	echo 'Cannot find // BEGIN GENERATED CODE (indented and followed by a newline in current platform format, which may be the problem) in tarallo-backend/SSRv1/Localizer.php' . PHP_EOL;
	exit(1);
}

$pieceslocalized2 = explode("\t// END GENERATED CODE", $localized, 2);
if(count($pieceslocalized2) < 2) {
	echo 'Cannot find indented // END GENERATED CODE in tarallo-backend/SSRv1/Localizer.php' . PHP_EOL;
	exit(1);
}

file_put_contents('tarallo-frontend' . DIRECTORY_SEPARATOR . 'js' . DIRECTORY_SEPARATOR . 'features.js',
	$piecesjs[0] . $resultjs . $piecesjs2[1]);
file_put_contents('tarallo-backend' . DIRECTORY_SEPARATOR . 'src' . DIRECTORY_SEPARATOR . 'Feature.php',
	$piecesphp[0] . $resultphp . $piecesphp2[1]);
file_put_contents('tarallo-backend' . DIRECTORY_SEPARATOR . 'SSRv1' . DIRECTORY_SEPARATOR . 'Localizer.php',
	$pieceslocalized[0] . $resultlocalized . $pieceslocalized2[1]);
echo 'Done. Check "tarallo-frontend/js/features.js", "tarallo-backend/src/Feature.php" and "tarallo-backend/SSRv1/Localizer.php" and commit changes' . PHP_EOL;
